{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3362f27f.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\nconst List = ({items, removeItem, editItem}) => {\n  return (\n    <div className='grocery-list'>\n    {items.map((item) => {\n      const {id, title} = item\n      return (\n      <article key={id} \n               className='grocery-item'> \n               <p className='title'>\n                {title}\n              </p>\n        <div className='btn-container'>\n          <button type='button' \n                  className='edit-btn'\n                  onClick={()=> editItem(id)}>\n                 <FaEdit/>\n          </button>\n          <button type='button' \n                  className='delete-btn'\n                  onClick = {()=> removeItem(id)}>\n                  <FaTrash/>\n          </button>\n        </div>\n      </article>\n      )\n    })}\n   </div>\n  )\n  };\n\nexport default List\n","import React, { useEffect } from 'react'\n\nconst Alert = ({type,msg, removeAlert, list}) => {\n  useEffect (() =>{\n    const timeout = setTimeout(()=>{\n      removeAlert()\n    }, 4000) // alert will dissapear after 4 seconds\n    return () => clearTimeout(timeout)\n}, [list]) // adding list tothe dependancy array - so every time the list is changes we get a new set of timeout//\n  return (\n   <p className={`alert alert-${type}`}>\n    {msg}\n    </p>\n  )\n}\n\nexport default Alert\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if (list) { //if list exists in the local storage\n    return JSON.parse(localStorage.getItem('list'))\n  }\n  else{\n    return []\n  }\n}\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] =useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert]= useState({\n    show:false, \n    msg: '', \n    type:''}); //instead of true or false its an object because alerts will have differrent colours etc. MSG - is message of the alert//\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(!name){\n    //if name value is false or empty ?- then display alert// \n     showAlert(true,'danger','please enter value')\n    }\n    else if (name && isEditing) {\n      //is name value is true and isEditing is true - then edit//\n      setList(list.map((item)=> {\n        if(item.id === editID) {\n          return {...item, title: name }\n        } \n        return item\n       }))\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'item changed')\n    }\n    else {\n      //create new item\n      showAlert(true,'success','item added to the list')\n      const newItem = {id:  new Date().getTime().toString(),  // not to deal with library where every item in the list should have an ID - we use time of creation as an ID here//\n        title: name}; \n        setList([...list,newItem]); //previous list +new item\n        setName('')\n      }\n  }\n\n  const showAlert = (\n      show=false,\n      type='',\n      msg=''\n      ) => {\n        setAlert({show,type,msg})\n      }\n\n  const clearList = () => {\n    showAlert(true,'danger','you list is empty');\n    setList ([])\n  }\n  const removeItem = (id) => {\n    showAlert(true,'danger','item removed');\n    setList(list.filter((item) => item.id !== id)) //if the item id is matching the item - then remove it, if not mathcing - then add it to the new array//\n  }\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id)\n    setIsEditing(true)\n    setEditID(id)\n    setName(specificItem.title)\n  }\n\n//local storage function to save the list\n  useEffect(() => {\n    localStorage.setItem('list',JSON.stringify(list))\n  }, [list])\n\n  return <section className='section-center'>\n    <form className='grocery-form' \n          onSubmit={handleSubmit}>\n      {alert.show && <Alert {...alert} // passing properties from stateAlert values  to the Alert component//\n         removeAlert={showAlert} \n         list={list}/>}\n      <h3>Grocery mate</h3>\n      <div className='form-control'> \n        <input type='text' \n              className='grocery' \n              placeholder='e.g. avo' \n              value={name} \n              onChange={(e) => setName(e.target.value)\n              }/>\n        <button type='submit' \n                className='submit-btn'>\n              {isEditing? 'edit': 'submit'}\n        </button>\n      </div> \n    </form>\n    {list.length > 0 && ( //if the length of the list is bigger the 0 - then display the list and the Clear button//\n         <div className='grocery-container'>\n         <List items={list} \n               removeItem={removeItem}\n               editItem={editItem}/>\n         <button className='clear-btn'\n         onClick={clearList}>\n           Delete all items\n         </button>\n       </div>\n    )}\n \n  </section>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}